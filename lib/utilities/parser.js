"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.rulesFromBNF = rulesFromBNF;
exports.parserFromRules = parserFromRules;
var _occamLexers = require("occam-lexers");
var _occamParsers = require("occam-parsers");
var _occamGrammarUtilities = require("occam-grammar-utilities");
var _rules = require("../utilities/rules");
var bnfLexer = _occamLexers.BNFLexer.fromNothing(), bnfParser = _occamParsers.BNFParser.fromNothing();
function rulesFromBNF(bnf) {
    var tokens = bnfLexer.tokensFromBNF(bnf), rules = bnfParser.rulesFromTokens(tokens);
    return rules;
}
function parserFromRules(Class, rules) {
    var ruleMap = (0, _rules).ruleMapFromRules(rules);
    var startRule = (0, _rules).startRuleFromRules(rules);
    startRule = (0, _occamGrammarUtilities).eliminateLeftRecursion(startRule, ruleMap);
    var parser = new Class(startRule, ruleMap);
    return parser;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvcGFyc2VyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBCTkZMZXhlciB9IGZyb20gXCJvY2NhbS1sZXhlcnNcIjtcbmltcG9ydCB7IEJORlBhcnNlciB9IGZyb20gXCJvY2NhbS1wYXJzZXJzXCI7XG5pbXBvcnQgeyBlbGltaW5hdGVMZWZ0UmVjdXJzaW9uIH0gZnJvbSBcIm9jY2FtLWdyYW1tYXItdXRpbGl0aWVzXCI7XG5cbmltcG9ydCB7IHJ1bGVNYXBGcm9tUnVsZXMsIHN0YXJ0UnVsZUZyb21SdWxlcyB9IGZyb20gXCIuLi91dGlsaXRpZXMvcnVsZXNcIjtcblxuY29uc3QgYm5mTGV4ZXIgPSBCTkZMZXhlci5mcm9tTm90aGluZygpLFxuICAgICAgYm5mUGFyc2VyID0gQk5GUGFyc2VyLmZyb21Ob3RoaW5nKCk7XG5cbmV4cG9ydCBmdW5jdGlvbiBydWxlc0Zyb21CTkYoYm5mKSB7XG4gIGNvbnN0IHRva2VucyA9IGJuZkxleGVyLnRva2Vuc0Zyb21CTkYoYm5mKSxcbiAgICAgICAgcnVsZXMgPSBibmZQYXJzZXIucnVsZXNGcm9tVG9rZW5zKHRva2Vucyk7XG5cbiAgcmV0dXJuIHJ1bGVzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VyRnJvbVJ1bGVzKENsYXNzLCBydWxlcykge1xuICBjb25zdCBydWxlTWFwID0gcnVsZU1hcEZyb21SdWxlcyhydWxlcyk7XG5cbiAgbGV0IHN0YXJ0UnVsZSA9IHN0YXJ0UnVsZUZyb21SdWxlcyhydWxlcyk7XG5cbiAgc3RhcnRSdWxlID0gZWxpbWluYXRlTGVmdFJlY3Vyc2lvbihzdGFydFJ1bGUsIHJ1bGVNYXApO1xuXG4gIGNvbnN0IHBhcnNlciA9IG5ldyBDbGFzcyhzdGFydFJ1bGUsIHJ1bGVNYXApO1xuXG4gIHJldHVybiBwYXJzZXI7XG59XG4iXSwibmFtZXMiOlsicnVsZXNGcm9tQk5GIiwicGFyc2VyRnJvbVJ1bGVzIiwiYm5mTGV4ZXIiLCJCTkZMZXhlciIsImZyb21Ob3RoaW5nIiwiYm5mUGFyc2VyIiwiQk5GUGFyc2VyIiwiYm5mIiwidG9rZW5zIiwidG9rZW5zRnJvbUJORiIsInJ1bGVzIiwicnVsZXNGcm9tVG9rZW5zIiwiQ2xhc3MiLCJydWxlTWFwIiwicnVsZU1hcEZyb21SdWxlcyIsInN0YXJ0UnVsZSIsInN0YXJ0UnVsZUZyb21SdWxlcyIsImVsaW1pbmF0ZUxlZnRSZWN1cnNpb24iLCJwYXJzZXIiXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQzs7OztRQVdHQSxZQUFZLEdBQVpBLFlBQVk7UUFPWkMsZUFBZSxHQUFmQSxlQUFlO0FBaEJOLElBQUEsWUFBYyxXQUFkLGNBQWMsQ0FBQTtBQUNiLElBQUEsYUFBZSxXQUFmLGVBQWUsQ0FBQTtBQUNGLElBQUEsc0JBQXlCLFdBQXpCLHlCQUF5QixDQUFBO0FBRVgsSUFBQSxNQUFvQixXQUFwQixvQkFBb0IsQ0FBQTtBQUV6RSxJQUFNQyxRQUFRLEdBQUdDLFlBQVEsU0FBQSxDQUFDQyxXQUFXLEVBQUUsRUFDakNDLFNBQVMsR0FBR0MsYUFBUyxVQUFBLENBQUNGLFdBQVcsRUFBRSxBQUFDO0FBRW5DLFNBQVNKLFlBQVksQ0FBQ08sR0FBRyxFQUFFO0lBQ2hDLElBQU1DLE1BQU0sR0FBR04sUUFBUSxDQUFDTyxhQUFhLENBQUNGLEdBQUcsQ0FBQyxFQUNwQ0csS0FBSyxHQUFHTCxTQUFTLENBQUNNLGVBQWUsQ0FBQ0gsTUFBTSxDQUFDLEFBQUM7SUFFaEQsT0FBT0UsS0FBSyxDQUFDO0NBQ2Q7QUFFTSxTQUFTVCxlQUFlLENBQUNXLEtBQUssRUFBRUYsS0FBSyxFQUFFO0lBQzVDLElBQU1HLE9BQU8sR0FBR0MsQ0FBQUEsR0FBQUEsTUFBZ0IsQUFBTyxDQUFBLGlCQUFQLENBQUNKLEtBQUssQ0FBQyxBQUFDO0lBRXhDLElBQUlLLFNBQVMsR0FBR0MsQ0FBQUEsR0FBQUEsTUFBa0IsQUFBTyxDQUFBLG1CQUFQLENBQUNOLEtBQUssQ0FBQyxBQUFDO0lBRTFDSyxTQUFTLEdBQUdFLENBQUFBLEdBQUFBLHNCQUFzQixBQUFvQixDQUFBLHVCQUFwQixDQUFDRixTQUFTLEVBQUVGLE9BQU8sQ0FBQyxDQUFDO0lBRXZELElBQU1LLE1BQU0sR0FBRyxJQUFJTixLQUFLLENBQUNHLFNBQVMsRUFBRUYsT0FBTyxDQUFDLEFBQUM7SUFFN0MsT0FBT0ssTUFBTSxDQUFDO0NBQ2YifQ==