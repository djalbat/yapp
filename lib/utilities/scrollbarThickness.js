"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getScrollbarThickness = getScrollbarThickness;
var _easy = require("easy");
var _css = require("../utilities/css");
var _styles = require("../styles");
var body = new _easy.Body(), style = {
    width: "50px",
    height: "50px",
    overflow: "scroll"
}, outerDiv = /*#__PURE__*/ _easy.React.createElement("div", {
    style: style
}), innerDiv = /*#__PURE__*/ _easy.React.createElement("div", null);
outerDiv.append(innerDiv);
body.append(outerDiv);
var outerDivWidth = outerDiv.getWidth(), innerDivWidth = innerDiv.getWidth();
outerDiv.remove();
function getScrollbarThickness(fancyScrollbars) {
    var scrollbarThickness = fancyScrollbars ? (0, _css).stripPixels(_styles.scrollbarThickness) : outerDivWidth - innerDivWidth; ///
    return scrollbarThickness;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvc2Nyb2xsYmFyVGhpY2tuZXNzLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwiQm9keSIsInN0cmlwUGl4ZWxzIiwic3R5bGVzU2Nyb2xsYmFyVGhpY2tuZXNzIiwic2Nyb2xsYmFyVGhpY2tuZXNzIiwiYm9keSIsInN0eWxlIiwid2lkdGgiLCJoZWlnaHQiLCJvdmVyZmxvdyIsIm91dGVyRGl2IiwiZGl2IiwiaW5uZXJEaXYiLCJhcHBlbmQiLCJvdXRlckRpdldpZHRoIiwiZ2V0V2lkdGgiLCJpbm5lckRpdldpZHRoIiwicmVtb3ZlIiwiZ2V0U2Nyb2xsYmFyVGhpY2tuZXNzIiwiZmFuY3lTY3JvbGxiYXJzIl0sIm1hcHBpbmdzIjoiQUFBQSxDQUFZOzs7O1FBaUNJLHFCQUFxQixHQUFyQixxQkFBcUI7QUEvQlQsR0FBTSxDQUFOLEtBQU07QUFFTixHQUFrQixDQUFsQixJQUFrQjtBQUNpQixHQUFXLENBQVgsT0FBVztBQUUxRSxHQUFLLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FMWSxLQUFNLFNBTTVCLEtBQUssR0FBRyxDQUFDO0lBQ1AsS0FBSyxFQUFFLENBQU07SUFDYixNQUFNLEVBQUUsQ0FBTTtJQUNkLFFBQVEsRUFBRSxDQUFRO0FBQ3BCLENBQUMsRUFDRCxRQUFRLGlCQVhjLEtBQU0scUJBYXpCLENBQUc7SUFBQyxLQUFLLEVBQUUsS0FBSztJQUduQixRQUFRLGlCQWhCYyxLQUFNLHFCQWtCekIsQ0FBRztBQUlaLFFBQVEsQ0FBQyxNQUFNLENBQUMsUUFBUTtBQUV4QixJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVE7QUFFcEIsR0FBSyxDQUFDLGFBQWEsR0FBRyxRQUFRLENBQUMsUUFBUSxJQUNqQyxhQUFhLEdBQUcsUUFBUSxDQUFDLFFBQVE7QUFFdkMsUUFBUSxDQUFDLE1BQU07U0FFQyxxQkFBcUIsQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUN0RCxHQUFLLENBQUMsa0JBQWtCLEdBQUcsZUFBZSxPQTlCaEIsSUFBa0IsY0FDaUIsT0FBVyx1QkErQnpDLGFBQWEsR0FBRyxhQUFhLENBQUUsQ0FBRyxBQUFILEVBQUcsQUFBSCxDQUFHO0lBRWpFLE1BQU0sQ0FBQyxrQkFBa0I7QUFDM0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBSZWFjdCwgQm9keSB9IGZyb20gXCJlYXN5XCI7XG5cbmltcG9ydCB7IHN0cmlwUGl4ZWxzIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9jc3NcIjtcbmltcG9ydCB7IHNjcm9sbGJhclRoaWNrbmVzcyBhcyBzdHlsZXNTY3JvbGxiYXJUaGlja25lc3MgfSBmcm9tIFwiLi4vc3R5bGVzXCI7XG5cbmNvbnN0IGJvZHkgPSBuZXcgQm9keSgpLFxuICAgICAgc3R5bGUgPSB7XG4gICAgICAgIHdpZHRoOiBcIjUwcHhcIixcbiAgICAgICAgaGVpZ2h0OiBcIjUwcHhcIixcbiAgICAgICAgb3ZlcmZsb3c6IFwic2Nyb2xsXCJcbiAgICAgIH0sXG4gICAgICBvdXRlckRpdiA9XG5cbiAgICAgICAgPGRpdiBzdHlsZT17c3R5bGV9IC8+XG5cbiAgICAgICxcbiAgICAgIGlubmVyRGl2ID1cblxuICAgICAgICA8ZGl2IC8+XG5cbiAgICAgIDtcblxub3V0ZXJEaXYuYXBwZW5kKGlubmVyRGl2KTtcblxuYm9keS5hcHBlbmQob3V0ZXJEaXYpO1xuXG5jb25zdCBvdXRlckRpdldpZHRoID0gb3V0ZXJEaXYuZ2V0V2lkdGgoKSxcbiAgICAgIGlubmVyRGl2V2lkdGggPSBpbm5lckRpdi5nZXRXaWR0aCgpO1xuXG5vdXRlckRpdi5yZW1vdmUoKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFNjcm9sbGJhclRoaWNrbmVzcyhmYW5jeVNjcm9sbGJhcnMpIHtcbiAgY29uc3Qgc2Nyb2xsYmFyVGhpY2tuZXNzID0gZmFuY3lTY3JvbGxiYXJzID9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJpcFBpeGVscyhzdHlsZXNTY3JvbGxiYXJUaGlja25lc3MpIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG91dGVyRGl2V2lkdGggLSBpbm5lckRpdldpZHRoOyAvLy9cblxuICByZXR1cm4gc2Nyb2xsYmFyVGhpY2tuZXNzO1xufVxuIl19