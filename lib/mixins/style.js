"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _css = require("../utilities/css");
var _constants = require("../constants");
function getLineHeight() {
    var lineHeightInPixels = this.css(_constants.LINE_HEIGHT), lineHeight = (0, _css).stripPixels(lineHeightInPixels);
    return lineHeight;
}
function getPadding(side) {
    var paddingInPixels = this.css("padding-".concat(side)), padding = (0, _css).stripPixels(paddingInPixels);
    return padding;
}
function getBorderWidth(side) {
    var borderWidthInPixels = this.css("border-".concat(side, "-width")), borderWidth = (0, _css).stripPixels(borderWidthInPixels);
    return borderWidth;
}
function getPaddingTop() {
    var side = _constants.TOP, paddingTop = this.getPadding(side);
    return paddingTop;
}
function getPaddingLeft() {
    var side = _constants.LEFT, paddingLeft = this.getPadding(side);
    return paddingLeft;
}
function getPaddingRight() {
    var side = _constants.RIGHT, paddingRight = this.getPadding(side);
    return paddingRight;
}
function getPaddingBottom() {
    var side = _constants.BOTTOM, paddingBottom = this.getPadding(side);
    return paddingBottom;
}
function getBorderTopWidth() {
    var side = _constants.TOP, borderTopWidth = this.getBorderWidth(side);
    return borderTopWidth;
}
function getBorderLeftWidth() {
    var side = _constants.LEFT, borderLeftWidth = this.getBorderWidth(side);
    return borderLeftWidth;
}
function getBorderRightWidth() {
    var side = _constants.RIGHT, borderRightWidth = this.getBorderWidth(side);
    return borderRightWidth;
}
function getBorderBottomWidth() {
    var side = _constants.BOTTOM, borderBottomWidth = this.getBorderWidth(side);
    return borderBottomWidth;
}
var styleMixins = {
    getLineHeight: getLineHeight,
    getPadding: getPadding,
    getPaddingTop: getPaddingTop,
    getPaddingLeft: getPaddingLeft,
    getPaddingRight: getPaddingRight,
    getPaddingBottom: getPaddingBottom,
    getBorderWidth: getBorderWidth,
    getBorderTopWidth: getBorderTopWidth,
    getBorderLeftWidth: getBorderLeftWidth,
    getBorderRightWidth: getBorderRightWidth,
    getBorderBottomWidth: getBorderBottomWidth
};
var _default = styleMixins;
exports.default = _default;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbnMvc3R5bGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IHN0cmlwUGl4ZWxzIH0gZnJvbSBcIi4uL3V0aWxpdGllcy9jc3NcIjtcbmltcG9ydCB7IFRPUCwgTEVGVCwgUklHSFQsIEJPVFRPTSwgTElORV9IRUlHSFQgfSBmcm9tIFwiLi4vY29uc3RhbnRzXCI7XG5cbmZ1bmN0aW9uIGdldExpbmVIZWlnaHQoKSB7XG4gIGNvbnN0IGxpbmVIZWlnaHRJblBpeGVscyA9IHRoaXMuY3NzKExJTkVfSEVJR0hUKSxcbiAgICAgICAgbGluZUhlaWdodCA9IHN0cmlwUGl4ZWxzKGxpbmVIZWlnaHRJblBpeGVscyk7XG5cbiAgcmV0dXJuIGxpbmVIZWlnaHQ7XG59XG5cbmZ1bmN0aW9uIGdldFBhZGRpbmcoc2lkZSkge1xuICBjb25zdCBwYWRkaW5nSW5QaXhlbHMgPSB0aGlzLmNzcyhgcGFkZGluZy0ke3NpZGV9YCksXG4gICAgICAgIHBhZGRpbmcgPSBzdHJpcFBpeGVscyhwYWRkaW5nSW5QaXhlbHMpO1xuXG4gIHJldHVybiBwYWRkaW5nO1xufVxuXG5mdW5jdGlvbiBnZXRCb3JkZXJXaWR0aChzaWRlKSB7XG4gIGNvbnN0IGJvcmRlcldpZHRoSW5QaXhlbHMgPSB0aGlzLmNzcyhgYm9yZGVyLSR7c2lkZX0td2lkdGhgKSxcbiAgICAgICAgYm9yZGVyV2lkdGggPSBzdHJpcFBpeGVscyhib3JkZXJXaWR0aEluUGl4ZWxzKTtcblxuICByZXR1cm4gYm9yZGVyV2lkdGg7XG59XG5cbmZ1bmN0aW9uIGdldFBhZGRpbmdUb3AoKSB7XG4gIGNvbnN0IHNpZGUgPSBUT1AsXG4gICAgICAgIHBhZGRpbmdUb3AgPSB0aGlzLmdldFBhZGRpbmcoc2lkZSk7XG5cbiAgcmV0dXJuIHBhZGRpbmdUb3A7XG59XG5cbmZ1bmN0aW9uIGdldFBhZGRpbmdMZWZ0KCkge1xuICBjb25zdCBzaWRlID0gTEVGVCxcbiAgICAgICAgcGFkZGluZ0xlZnQgPSB0aGlzLmdldFBhZGRpbmcoc2lkZSk7XG5cbiAgcmV0dXJuIHBhZGRpbmdMZWZ0O1xufVxuXG5mdW5jdGlvbiBnZXRQYWRkaW5nUmlnaHQoKSB7XG4gIGNvbnN0IHNpZGUgPSBSSUdIVCxcbiAgICAgICAgcGFkZGluZ1JpZ2h0ID0gdGhpcy5nZXRQYWRkaW5nKHNpZGUpO1xuXG4gIHJldHVybiBwYWRkaW5nUmlnaHQ7XG59XG5cbmZ1bmN0aW9uIGdldFBhZGRpbmdCb3R0b20oKSB7XG4gIGNvbnN0IHNpZGUgPSBCT1RUT00sXG4gICAgICAgIHBhZGRpbmdCb3R0b20gPSB0aGlzLmdldFBhZGRpbmcoc2lkZSk7XG5cbiAgcmV0dXJuIHBhZGRpbmdCb3R0b207XG59XG5cbmZ1bmN0aW9uIGdldEJvcmRlclRvcFdpZHRoKCkge1xuICBjb25zdCBzaWRlID0gVE9QLFxuICAgICAgICBib3JkZXJUb3BXaWR0aCA9IHRoaXMuZ2V0Qm9yZGVyV2lkdGgoc2lkZSk7XG5cbiAgcmV0dXJuIGJvcmRlclRvcFdpZHRoO1xufVxuXG5mdW5jdGlvbiBnZXRCb3JkZXJMZWZ0V2lkdGgoKSB7XG4gIGNvbnN0IHNpZGUgPSBMRUZULFxuICAgICAgICBib3JkZXJMZWZ0V2lkdGggPSB0aGlzLmdldEJvcmRlcldpZHRoKHNpZGUpO1xuXG4gIHJldHVybiBib3JkZXJMZWZ0V2lkdGg7XG59XG5cbmZ1bmN0aW9uIGdldEJvcmRlclJpZ2h0V2lkdGgoKSB7XG4gIGNvbnN0IHNpZGUgPSBSSUdIVCxcbiAgICAgICAgYm9yZGVyUmlnaHRXaWR0aCA9IHRoaXMuZ2V0Qm9yZGVyV2lkdGgoc2lkZSk7XG5cbiAgcmV0dXJuIGJvcmRlclJpZ2h0V2lkdGg7XG59XG5cbmZ1bmN0aW9uIGdldEJvcmRlckJvdHRvbVdpZHRoKCkge1xuICBjb25zdCBzaWRlID0gQk9UVE9NLFxuICAgICAgICBib3JkZXJCb3R0b21XaWR0aCA9IHRoaXMuZ2V0Qm9yZGVyV2lkdGgoc2lkZSk7XG5cbiAgcmV0dXJuIGJvcmRlckJvdHRvbVdpZHRoO1xufVxuXG5jb25zdCBzdHlsZU1peGlucyA9IHtcbiAgZ2V0TGluZUhlaWdodCxcbiAgZ2V0UGFkZGluZyxcbiAgZ2V0UGFkZGluZ1RvcCxcbiAgZ2V0UGFkZGluZ0xlZnQsXG4gIGdldFBhZGRpbmdSaWdodCxcbiAgZ2V0UGFkZGluZ0JvdHRvbSxcbiAgZ2V0Qm9yZGVyV2lkdGgsXG4gIGdldEJvcmRlclRvcFdpZHRoLFxuICBnZXRCb3JkZXJMZWZ0V2lkdGgsXG4gIGdldEJvcmRlclJpZ2h0V2lkdGgsXG4gIGdldEJvcmRlckJvdHRvbVdpZHRoXG59O1xuXG5leHBvcnQgZGVmYXVsdCBzdHlsZU1peGlucztcbiJdLCJuYW1lcyI6WyJnZXRMaW5lSGVpZ2h0IiwibGluZUhlaWdodEluUGl4ZWxzIiwiY3NzIiwibGluZUhlaWdodCIsImdldFBhZGRpbmciLCJzaWRlIiwicGFkZGluZ0luUGl4ZWxzIiwicGFkZGluZyIsImdldEJvcmRlcldpZHRoIiwiYm9yZGVyV2lkdGhJblBpeGVscyIsImJvcmRlcldpZHRoIiwiZ2V0UGFkZGluZ1RvcCIsInBhZGRpbmdUb3AiLCJnZXRQYWRkaW5nTGVmdCIsInBhZGRpbmdMZWZ0IiwiZ2V0UGFkZGluZ1JpZ2h0IiwicGFkZGluZ1JpZ2h0IiwiZ2V0UGFkZGluZ0JvdHRvbSIsInBhZGRpbmdCb3R0b20iLCJnZXRCb3JkZXJUb3BXaWR0aCIsImJvcmRlclRvcFdpZHRoIiwiZ2V0Qm9yZGVyTGVmdFdpZHRoIiwiYm9yZGVyTGVmdFdpZHRoIiwiZ2V0Qm9yZGVyUmlnaHRXaWR0aCIsImJvcmRlclJpZ2h0V2lkdGgiLCJnZXRCb3JkZXJCb3R0b21XaWR0aCIsImJvcmRlckJvdHRvbVdpZHRoIiwic3R5bGVNaXhpbnMiXSwibWFwcGluZ3MiOiJBQUFBLENBQVk7Ozs7O0FBRWdCLEdBQWtCLENBQWxCLElBQWtCO0FBQ1EsR0FBYyxDQUFkLFVBQWM7U0FFM0RBLGFBQWEsR0FBRyxDQUFDO0lBQ3hCLEdBQUssQ0FBQ0Msa0JBQWtCLEdBQUcsSUFBSSxDQUFDQyxHQUFHLENBSGlCLFVBQWMsZUFJNURDLFVBQVUsT0FMVSxJQUFrQixjQUtiRixrQkFBa0I7SUFFakQsTUFBTSxDQUFDRSxVQUFVO0FBQ25CLENBQUM7U0FFUUMsVUFBVSxDQUFDQyxJQUFJLEVBQUUsQ0FBQztJQUN6QixHQUFLLENBQUNDLGVBQWUsR0FBRyxJQUFJLENBQUNKLEdBQUcsQ0FBRSxDQUFRLFVBQU8sTUFBQSxDQUFMRyxJQUFJLElBQzFDRSxPQUFPLE9BWmEsSUFBa0IsY0FZaEJELGVBQWU7SUFFM0MsTUFBTSxDQUFDQyxPQUFPO0FBQ2hCLENBQUM7U0FFUUMsY0FBYyxDQUFDSCxJQUFJLEVBQUUsQ0FBQztJQUM3QixHQUFLLENBQUNJLG1CQUFtQixHQUFHLElBQUksQ0FBQ1AsR0FBRyxDQUFFLENBQU8sU0FBTyxNQUFNLENBQVhHLElBQUksRUFBQyxDQUFNLFdBQ3BESyxXQUFXLE9BbkJTLElBQWtCLGNBbUJaRCxtQkFBbUI7SUFFbkQsTUFBTSxDQUFDQyxXQUFXO0FBQ3BCLENBQUM7U0FFUUMsYUFBYSxHQUFHLENBQUM7SUFDeEIsR0FBSyxDQUFDTixJQUFJLEdBeEIwQyxVQUFjLE1BeUI1RE8sVUFBVSxHQUFHLElBQUksQ0FBQ1IsVUFBVSxDQUFDQyxJQUFJO0lBRXZDLE1BQU0sQ0FBQ08sVUFBVTtBQUNuQixDQUFDO1NBRVFDLGNBQWMsR0FBRyxDQUFDO0lBQ3pCLEdBQUssQ0FBQ1IsSUFBSSxHQS9CMEMsVUFBYyxPQWdDNURTLFdBQVcsR0FBRyxJQUFJLENBQUNWLFVBQVUsQ0FBQ0MsSUFBSTtJQUV4QyxNQUFNLENBQUNTLFdBQVc7QUFDcEIsQ0FBQztTQUVRQyxlQUFlLEdBQUcsQ0FBQztJQUMxQixHQUFLLENBQUNWLElBQUksR0F0QzBDLFVBQWMsUUF1QzVEVyxZQUFZLEdBQUcsSUFBSSxDQUFDWixVQUFVLENBQUNDLElBQUk7SUFFekMsTUFBTSxDQUFDVyxZQUFZO0FBQ3JCLENBQUM7U0FFUUMsZ0JBQWdCLEdBQUcsQ0FBQztJQUMzQixHQUFLLENBQUNaLElBQUksR0E3QzBDLFVBQWMsU0E4QzVEYSxhQUFhLEdBQUcsSUFBSSxDQUFDZCxVQUFVLENBQUNDLElBQUk7SUFFMUMsTUFBTSxDQUFDYSxhQUFhO0FBQ3RCLENBQUM7U0FFUUMsaUJBQWlCLEdBQUcsQ0FBQztJQUM1QixHQUFLLENBQUNkLElBQUksR0FwRDBDLFVBQWMsTUFxRDVEZSxjQUFjLEdBQUcsSUFBSSxDQUFDWixjQUFjLENBQUNILElBQUk7SUFFL0MsTUFBTSxDQUFDZSxjQUFjO0FBQ3ZCLENBQUM7U0FFUUMsa0JBQWtCLEdBQUcsQ0FBQztJQUM3QixHQUFLLENBQUNoQixJQUFJLEdBM0QwQyxVQUFjLE9BNEQ1RGlCLGVBQWUsR0FBRyxJQUFJLENBQUNkLGNBQWMsQ0FBQ0gsSUFBSTtJQUVoRCxNQUFNLENBQUNpQixlQUFlO0FBQ3hCLENBQUM7U0FFUUMsbUJBQW1CLEdBQUcsQ0FBQztJQUM5QixHQUFLLENBQUNsQixJQUFJLEdBbEUwQyxVQUFjLFFBbUU1RG1CLGdCQUFnQixHQUFHLElBQUksQ0FBQ2hCLGNBQWMsQ0FBQ0gsSUFBSTtJQUVqRCxNQUFNLENBQUNtQixnQkFBZ0I7QUFDekIsQ0FBQztTQUVRQyxvQkFBb0IsR0FBRyxDQUFDO0lBQy9CLEdBQUssQ0FBQ3BCLElBQUksR0F6RTBDLFVBQWMsU0EwRTVEcUIsaUJBQWlCLEdBQUcsSUFBSSxDQUFDbEIsY0FBYyxDQUFDSCxJQUFJO0lBRWxELE1BQU0sQ0FBQ3FCLGlCQUFpQjtBQUMxQixDQUFDO0FBRUQsR0FBSyxDQUFDQyxXQUFXLEdBQUcsQ0FBQztJQUNuQjNCLGFBQWEsRUFBYkEsYUFBYTtJQUNiSSxVQUFVLEVBQVZBLFVBQVU7SUFDVk8sYUFBYSxFQUFiQSxhQUFhO0lBQ2JFLGNBQWMsRUFBZEEsY0FBYztJQUNkRSxlQUFlLEVBQWZBLGVBQWU7SUFDZkUsZ0JBQWdCLEVBQWhCQSxnQkFBZ0I7SUFDaEJULGNBQWMsRUFBZEEsY0FBYztJQUNkVyxpQkFBaUIsRUFBakJBLGlCQUFpQjtJQUNqQkUsa0JBQWtCLEVBQWxCQSxrQkFBa0I7SUFDbEJFLG1CQUFtQixFQUFuQkEsbUJBQW1CO0lBQ25CRSxvQkFBb0IsRUFBcEJBLG9CQUFvQjtBQUN0QixDQUFDO2VBRWNFLFdBQVcifQ==